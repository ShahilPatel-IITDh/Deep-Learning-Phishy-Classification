
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head><title>
	Plex Manufacturing Cloud - Login
</title><meta name="viewport" content="width=device-width; minimum-scale=1.0; maximum-scale=1.0;" /><meta name="MobileOptimized" content="0" /><script type="text/javascript" src="https://www.plexonline.com/_ScriptLibrary/plexus.js"></script>
<script type="text/javascript" src="https://www.plexonline.com/Modules/scripts/browser.js"></script>
<script type="text/javascript" src="https://www.plexonline.com/Modules/scripts/plex.js"></script>
<script type="text/javascript" src="https://www.plexonline.com/Modules/scripts/glossarymanager.js"></script>
<script type="text/javascript" src="https://www.plexonline.com/Modules/scripts/cssutility.js"></script>
<script type="text/javascript" src="https://www.plexonline.com/Modules/scripts/jQuery/jquery-1.5.1.min.js"></script>

  <script type="text/javascript">
    $(document).ready(function ()
    {
      var svFormSelector = ".LoginForm";
      var svLabelSelector = ".LoginLabel";
      var svLogoSelector = "#divLoginLogo";

      $(this).find(svFormSelector).each(function ()
      {
        var ivLogoWidth = $(this).find(svLogoSelector).width();
        if ($(this).find(svLabelSelector).first().width() == null)
        {
          // no labels = no input fields, constrain width by logo size
          if (ivLogoWidth != null && ivLogoWidth > 0)
          {
            $(this).width(ivLogoWidth + 50);
            return;
          }
        }
      });
    });

    function Init()
    {
      SetWindowProperties();
      Plex.DocumentController.Initialize();
		}

    function SetWindowProperties(oOptions)
    {
      oOptions = oOptions || { };
      oOptions.SsoMode = oOptions.SsoMode || false;
      oOptions.KioskMode = oOptions.KioskMode || false;

      if (oOptions.SsoMode)
      {
        window.name = "LAUNCHPOLSSO" + new Date() * 1;
      }
      else if (oOptions.KioskMode
        || window.name.indexOf("POLPOLMAINKIOSK") === 0) // allow expired/deleted kiosk sessions to stay inside a kiosk window
      {
        window.name = 'LAUNCHPOLMAINKIOSK' + new Date() * 1;
      }
      else if (window.name.length === 0
        || window.name.indexOf("POLPOLSSO") === 0 // a previous SSO window re-used for main POL
        || (window.name.indexOf("LAUNCHPOL") === -1 && window.name.indexOf("POLPOL") === -1))
      {
        window.name = "LAUNCHPOLMAIN" + new Date() * 1;
      }
    }

    function Login(svLoginUrl)
    {
      var svNewWindowName = "POLPOLMAIN" + new Date() * 1;
      var bvNewWindow = true;
      var bvSpecifySize = true;
      var bvAllowToolbars = false;
      if (Plex.IsMobileURL() || window.name.indexOf("POLPOL") === 0)
      {
        bvNewWindow = false; // mobile and standard Plex windows via redirects
      }
      else if (window.name.indexOf("LAUNCHPOLMAINKIOSK") === 0)
      {
        bvNewWindow = false; // redirect inside kiosk window
        window.name = window.name.replace(/LAUNCH/gi, "POL");
      }
      else if (window.name.indexOf("LAUNCHPOLSSO") === 0)
      {
        bvSpecifySize = false;
        bvAllowToolbars = true;
        svNewWindowName = window.name.replace(/LAUNCH/gi, "POL");
      }
      else if (window.name.length == 0 || window.name.indexOf("LAUNCHPOLMAIN") === 0)
      {
        // default behavior (fresh window and launch new session)
        bvAllowToolbars = false;
      }

      if (bvNewWindow)
      {
        var ivWidth = screen.availWidth - 10;
        var ivHeight = screen.availHeight - 50;
        var svToolbars = (bvAllowToolbars) ? "yes" : "no";

        var svNewWindowOptions = "scrollbars=yes,resizable=yes,status=yes"; // all windows
        svNewWindowOptions += ",toolbar=" + svToolbars + ",menubar=" + svToolbars + ",location=" + svToolbars + ""; // explicit toolbar options
        if (bvSpecifySize)
        {
          svNewWindowOptions += ",Left=0,Top=0,Width=" + ivWidth + ",Height=" + ivHeight; // specific size
        }

        window.open(svLoginUrl, svNewWindowName, svNewWindowOptions);
        plForce_Window_Close(window);
        return;
      }

      window.location.href = svLoginUrl;
    }

    function RedirectToFullPage()
    {
      // Wizards use framesets and one frame redirects to index when session expires so this ensures the full page is the index page
      if (self.top.location.href != self.location.href)
      {
        self.top.location.href = self.top.location.href;
      }
    }

	</script>
  <link id="ctl13" type="text/css" rel="stylesheet" href="https://static.plexonline.com/Themes/1/Styles.css" /></head>
<body onload="Init();">
  <div class="BodyWrapper">
    <div id="divToolbar" class="Toolbar">
      <div id="NavigationToolbar" class="NavigationToolbarSection">
        <div class="ToolbarButton">
	<a id="btnAbout" class="Button AboutPlexButton green" onclick="return false;" onmouseover="window.status=&#39;&#39;; return true;" onmouseout="window.status=&#39;&#39;;" href="javascript:void(0);"><span id="btnAbout_Label">About Plex</span></a>
</div><script type="text/javascript">
Plex.EventUtility.Add("btnAbout", "click", function(oEvent) { Plex.Navigate("http://www.plex.com", { ShowDefaultWaitMessage:true }); });
</script>

        <div class="ToolbarButton">
	<a id="btnHelp" class="Button HelpButton light-blue" onclick="return false;" onmouseover="window.status=&#39;Show Help for this Page&#39;; return true;" onmouseout="window.status=&#39;&#39;;" title="Show Help for this Page" href="javascript:void(0);"><span id="btnHelp_Label">Help</span></a>
</div><script type="text/javascript">
Plex.EventUtility.Add("btnHelp", "click", function(oEvent) { Plex.Navigate("../../Platform/Login/Help.aspx", { ShowDefaultWaitMessage:true }); });
</script>

        <div class="ToolbarButton">
	<a id="btnSetup" class="Button PcSetupButton green" onclick="return false;" onmouseover="window.status=&#39;&#39;; return true;" onmouseout="window.status=&#39;&#39;;" href="javascript:void(0);"><span id="btnSetup_Label">PC Setup</span></a>
</div><script type="text/javascript">
Plex.EventUtility.Add("btnSetup", "click", function(oEvent) { Plex.Navigate("../../Platform/Login/PCSetup.aspx", { ShowDefaultWaitMessage:true }); });
</script>

        <div class="ToolbarButton">
	<a id="btnIAM" class="Button IamLoginButton green" onclick="return false;" onmouseover="window.status=&#39;&#39;; return true;" onmouseout="window.status=&#39;&#39;;" href="javascript:void(0);"><span id="btnIAM_Label">IAM Login</span></a>
</div><script type="text/javascript">
Plex.EventUtility.Add("btnIAM", "click", function(oEvent) { Plex.Navigate("../../../signon", { ShowDefaultWaitMessage:true }); });
</script>

      </div>
      <div id="ActionToolbar" class="ActionToolbarSection"></div>
      <div id="MenuToolbar" class="MenuToolbarSection">
        <div id="toolbarLogo" class="LoginToolbarLogo"></div>
      </div>
    </div>

    <form name="thisForm" method="post" action="https://www.plexonline.com/Modules/SystemAdministration/Login/Index.aspx" id="thisForm">
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwUKLTk4OTcyNDU1OGRkROA60wDmk5fBf+XqUSrY1wZha4U=" />

<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="5390FBE6" />
      

        <div class="LoginForm">
          <div class="LoginBody">
            <div id="divLoginLogo" class="LoginLogo"></div>
              <div class="LoginButtonWrapper">
                <a id="btnMainIAM" class="Button IamLoginButton green" onclick="return false;" onmouseover="window.status=&#39;&#39;; return true;" onmouseout="window.status=&#39;&#39;;" href="javascript:void(0);"><span id="btnMainIAM_Label">IAM Login</span></a><script type="text/javascript">
Plex.EventUtility.Add("btnMainIAM", "click", function(oEvent) { Plex.Navigate("../../../signon", { ShowDefaultWaitMessage:true }); });
</script>

              </div>
              
          </div>
        </div>

        
          <div class="TinyText">
            <a href="javascript:Plex.Navigate(&quot;../../../Use_Policy.asp&quot;, { ShowDefaultWaitMessage: true });"><span id="lblUsePolicy" onmouseover="window.status=&#39;Acceptable Use Policy&#39;; return true;" onmouseout="window.status=&#39;&#39;;">Acceptable Use Policy</span></a>&nbsp;
            <a href="https://www.plex.com/utility/pmc-privacy-policy.html">Privacy Policy</a>
          </div>
        <input name="hdnUseSslAfterLogin" type="hidden" id="hdnUseSslAfterLogin" value="1" />
    <script type="text/javascript">
function GetWebRoot() {
  return "https://www.plexonline.com/";
}
function GetModulesRoot() {
  return "https://www.plexonline.com/Modules/";
}
function GetRenderingEngineRoot() {
  return "https://www.plexonline.com/Rendering_Engine/";
}

</script>


<script type="text/javascript">
//<![CDATA[
RedirectToFullPage();//]]>
</script>
</form>
  </div>
</body>
</html>

